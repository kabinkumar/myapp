name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Set Up Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Check Current Branch
        run: git branch --show-current
      
      - name: Debug File Structure
        run: find . -type f

      - name: Set up Docker
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t myapp:latest .
          docker tag myapp:latest ${{ secrets.DOCKER_USERNAME }}/myapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest

  deploy:
    runs-on: [self-hosted, macOS, ARM64]
    needs: build-and-push
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Verify Kubeconfig
        run: |
          kubectl config view
          kubectl get nodes

      - name: Deploy ArgoCD Application
        run: |
          kubectl apply -f deployments/argocd-app.yaml
          echo "Waiting for ArgoCD to detect changes..."
          sleep 30  # Allow ArgoCD to register the application

      - name: Sync ArgoCD with Prune
        run: |
          argocd app sync myapp --prune --insecure || echo "Sync might still be progressing."

      - name: Port-forward myapp to localhost:8081
        run: |
          nohup kubectl port-forward svc/myapp-service 8081:80 --address 0.0.0.0 > /dev/null 2>&1 &
          echo "myapp exposed at http://localhost:8081"

      - name: Deploy Monitoring Stack (Prometheus + Grafana)
        run: |
          kubectl apply -f deployments/monitoring.yaml
          echo "Waiting for monitoring stack to be ready..."
          sleep 30

      - name: Port-forward Prometheus to localhost:9090
        run: |
          nohup kubectl port-forward svc/prometheus -n monitoring 9090:9090 --address 0.0.0.0 > /dev/null 2>&1 &
          echo "Prometheus available at http://localhost:9090"

      - name: Port-forward Grafana to localhost:3000
        run: |
          nohup kubectl port-forward svc/grafana -n monitoring 3000:3000 --address 0.0.0.0 > /dev/null 2>&1 &
          echo "Grafana available at http://localhost:3000"

  